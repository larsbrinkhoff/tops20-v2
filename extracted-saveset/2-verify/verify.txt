VERIFY.MEM		USER DOCUMENTATION FOR THE TOPS-20
			SYSTEM PROGRAM VERIFICATION PACKAGE.




Copyright 1976, Digital Equipment Corp., Maynard, Mass.










The information  in  this  document  is  subject  to  change
without  notice  and should not be construed as a commitment
by  Digital  Equipment   Corporation.    Digital   Equipment
Corporation  assumes  no  responsibility for any errors that
may appear in this manual.

The software described in this document is furnished to  the
purchaser  under  a  license  for  use  on a single computer
system and  can  be  copied  (with  inclusion  of  DIGITAL's
copyright notice) only for use in such system, except as may
otherwise be provided in writing by DIGITAL.

Digital Equipment Corporation assumes no responsibility  for
the  use or reliability of its software on equipment that is
not supplied by DIGITAL.





Copyright  (C)  1976  by  Digital   Equipment
Corporation



The following are trademarks of Digital Equipment
    Corporation:
.LITERAL

    CDP            DIGITAL         INDAC            PS/8

    COMPUTER LAB   DNC             KA10             QUICKPOINT

    COMSYST        EDGRIN          LAB-8            RAD-8

    COMTEX         EDUSYSTEM       LAB-8/e          RSTS

    DDT            FLIP CHIP       LAB-K            RSX

    DEC            FOCAL           OMNIBUS          RTM

    DECCOMM        GLC-8           OS/8             RT-11

    DECTAPE        IDAC            PDP              SABR

    DIBOL          IDACS           PHA              TYPESET 8

.END LITERAL


	TOPS 20 SYSTEM PROGRAM VERIFICATION PROCEDURE

			5/11/76


			TABLE OF CONTENTS

		I.  DESCRIPTION.

		II.  GENERAL STRATEGY.

		III.  OPERATING INSTRUCTIONS.

		IV.  SPECIAL COMMENTS.

		V.  PACKAGING OF THE VERIFICATION PROCEDURE.

	APPENDICES

		A.  ALPHABETIC LISTING OF FILES COMPRISING THE
		    TOPS-20 VERIFICATION PROCEDURE.

		B.  SAMPLE BATCH COMMANDS FOR VERIFICATION OF A
		    SOFTWARE MODULE.

		C.  LIST OF SOFTWARE MODULES WHICH ARE 
		   VERIFIED.

		D.  SAMPLE LISTING OF ERRORS.LOG.



I.	DESCRIPTION.

THE VERIFICATION PROCEDURE PROVIDES AN AUTOMATIC METHOD FOR
DETERMINING, AFTER MOST OF THE TOPS-20 INSTALLATION PROCEDURES
HAVE BEEN EXECUTED SUCCESSFULLY, THAT THE CUSTOMER HAS RECEIVED
ALL OF THE SOFTWARE HE HAS ORDERED.

IT CONSISTS OF A SET OF BATCH CONTROL FILES, SOURCE FILES,
TEXT AND DATA FILES, AND AN ".EXE" FILE.  THESE FILES,
TOGETHER WITH A BRIEF DESCRIPTION OF EACH, ARE LISTED IN 
APPENDIX A.

IN GENERAL, FOR EACH SOFTWARE PRODUCT OR COMPONENT, THE PACKAGE
ATTEMPTS TO VERIFY EACH SOFTWARE MODULE WHICH 
THE CUSTOMER SHOULD HAVE RECEIVED.

"VERIFICATION" CONSISTS OF AS MANY OF THE FOLLOWING STEPS
AS ARE APPROPRIATE FOR THE GIVEN MODULE:

	A.	VERIFICATION OF THE EXISTENCE OF THE FILE
		WHICH REPRESENTS THE SOFTWARE MODULE.

	B.	PRINTOUT IN THE BATCH LOG FILE OF THE 
		VERSION INFORMATION.  THIS INFORMATION WILL 
		BE EXTRACTED FROM THE LOG FILE LATER ON, AND WILL
		BE COMPARED WITH THE DATA IN A MASTER FILE (CONTRL.TXT)
		TO PROVIDE A REPORT ON THE CORRECTNESS OF VERSION
		NUMBERS OF ALL EXECUTABLE FILES WHICH ARE PART OF
		THE BUNDLED SOFTWARE PACKAGE (DEC PRODUCT NUMBER QT010).

	C.	AN ATTEMPT TO RUN THE MODULE AND GIVE IT ONE
		OR MORE COMMANDS TO EXECUTE A SIMPLE FUNCTION.

	D.	VERIFICATION OF THE EXISTENCE OF A HELP FILE
		FOR THE MODULE, IF A HELP FILE IS SUPPOSED TO BE 
		PRESENT.

	
NOTE THAT THIS PACKAGE IS NOT IN ANY WAY INTENDED TO BE AN EXHAUSTIVE
TEST OF ANY SOFTWARE PRODUCT.




II.	GENERAL STRATEGY.


1.	OVERALL FLOW OF BATCH CONTROL.

THE OPERATOR SUBMITS THE BATCH JOB VERIFY.BAT FROM A USER AREA
IN WHICH WHEEL PRIVILEGES ARE ALLOWED.  (WHEEL PRIVILEGES ARE USED
ONLY ONCE IN THE ENTIRE PACKAGE).  THIS JOB FIRST 
PERFORMS VERIFICATION OF ALL SOFTWARE AND
DELIVERABLE FILES COMMON TO ALL CUSTOMER INSTALLATIONS (BUNDLED
SOFTWARE).  THE JOB THEN TESTS FOR THE EXISTENCE OF CERTAIN FILES
WHICH THE 
INSTALLER HAS (OPTIONALLY) CREATED, EACH CORRESPONDING TO ONE
OF THE VARIOUS
UNBUNDLED SOFTWARE PRODUCTS: FORTRAN, COBOL, SORT, OR BASIC.

FOR EACH FILE WHICH EXISTS, A CORRESPONDING BATCH JOB IS SUBMITTED
BY VERIFY.BAT TO VERIFY ONE OF THE UNBUNDLED SOFTWARE PRODUCTS. 

AS NEW UNBUNDLED PRODUCTS ARE ADDED TO THE LIST OF OPTIONS, THEY WILL
BE ADDED TO THE VERIFICATION PACAGE IN THE SAME WAY.


2.	ERROR DETECTION AND REPORTING.

THE SAME ERROR REPORTING PROCEDURE IS USED IN EACH OF THE BATCH 
JOBS:  ANY ERROR CONDITION DETECTED BY THE BATCH JOB ITSELF RESULTS
IN THE WRITING OF A MESSAGE INTO THE FILE "ERRORS.LOG".  EACH SUCH
MESSAGE IDENTIFIES THE CONTROL FILE FROM WHICH IT CAME AND, IN
THE CASE OF VERIFY.BAT ITSELF, THE PARTICULAR TEST WHICH WAS BEING
PERFORMED.  USUALLY, IF POSSIBLE, SOME ADDITIONAL INFORMATION
REGARDING THE CONDITIONS OF THE ERROR ALSO APPEAR IN THE MESSAGE.

"ERRORS.LOG" IS CREATED BY THE PROGRAM WRTERR WHICH IS RUN AT THE
BEGINNING OF VERIFY.BAT;  ALL MESSAGES ARE APPENDED TO THIS FILE LATER
ON, AND THE JOB VERIF1.BAT CAUSES "ERRORS.LOG" TO BE PRINTED.
TO GUARANTEE THAT NO SIMULTANEOUS WRITES ARE ATTEMPTED INTO THIS
FILE, IT IS ESSENTIAL THAT THE
JOB VERIFY.BAT BE SUBMITTED WITH THE "UNIQUE" SWITCH SET TO 1
(THIS IS THE DEFAULT VALUE), AND THAT ANY VERIFICATION JOBS
SUBMITTED BY VERIFY.BAT, INCLUDING VERIF1.BAT, ALSO BE SUBMITTED
WITH "UNIQUE" = 1.  IN ADDITION, APPROPRIATE 
DEPENDENCY COUNT SETTINGS MUST BE
MADE SO THAT VERIF1.BAT RUNS AFTER ALL OTHER JOBS HAVE RUN.




3.	TERMINATION AND USER ANALYSIS OF RESULTS.

A.	THE JOB IS COMPLETE WHEN ALL BATCH CONTROL 
FILES WHICH GET SUBMITTED HAVE RUN TO COMPLETION AND 
WHEN ERRORS.LOG HAS BEEN OUTPUT TO THE PRINTER.

B.	THE FILE "ERRORS.LOG" SHOULD BE INSPECTED IMMEDIATELY,
SINCE ALL DETECTABLE ERRORS WILL BE REPORTED THERE.  THERE WILL
ALWAYS BE TWO MESSAGES IN THIS FILE WHICH ARE NOT ERROR MESSAGES.

ONE OF THESE MESSAGES DISPLAYS THE RESULTS OF RUNNING FILCOM ON TWO
SUPPOSEDLY EQUAL FILES (THERE IS NO OTHER WAY TO REPORT THE
RESULTS OF THE FILCOM RUN).  THE OTHER IS A LONG MESSAGE
CONTAINING A COMPARISON OF VERSION NUMBERS FOR ALL THE FILES
REPRESENTING EXECUTABLE PROGRAMS.

C.	THE FILCOM MESSAGE IDENTIFIES ITSELF AND THEN DISPLAYS 
THE OUTPUT FILE OF THE FILCOM RUN ITSELF, FOLLOWED BY 
SOME ADDITIONAL SELF-IDENTIFYING
MESSAGE LINES.  SINCE ONE OF THE FILES BEING COMPARED IS
A COPY OF THE OTHER, FILCOM SHOULD FIND NO DIFFERENCES, AND
THERE SHOULD BE NO OUTPUT.  THUS A NORMAL RESULT OF THIS PARTICULAR
TEST SHOULD APPEAR AS FOLLOWS:

.LITERAL
++++	CONTROL FILE VERIFY.BAT			++++
++++	(THIS MESSAGE WILL ALWAYS		++++
++++	APPEAR IN ERRORS.LOG)			++++
++++	TEST OF FILCOM.  ANY DISCREPANCIES	++++
++++	BETWEEN TWO SUPPOSEDLY EQUAL FILES	++++
++++	WILL BE SANDWICHED BETWEEN TWO LINES	++++
++++	BELOW:					++++
++++	THIS LINE PRECEEDS ANY DISCREPANCIES	++++
++++	THIS LINE FOLLOWS ANY DISCREPANCIES	++++
++++	END OF FILCOM TEST IN VERIFY.BAT	++++
.END LITERAL

SEE ALSO SECTION IV.5.

D.	THE SECOND MESSAGE WHICH ALWAYS APPEARS IS LABLED:

 ++++	SEARCH.FOR MESSAGE			++++
 ++++	COMPARISON OF VERSION NUMBERS		++++
 ++++						++++
 PROGRAM NAME    SHOULD BE       VERSION IS



THIS LABEL IS FOLLOWED BY 40 OR MORE LINES INFORMATION OF 
WHICH THE FOLLOWING ARE EXAMPLES:

.LITERAL
 
 MONITR          1(356)          1(356)          CHECK OK            
 DUMP                                            CHECK OK            
 EDIT            1A(26)          1A(25)          VER. NO. MISMATCH   
 SURPRIZE        7(0)                            PROGRAM MISSING     
 UNEXPECTED1                                     UNEXPECTED FILE     
.END LITERAL


EACH LINE CONTAINS A PROGRAM NAME, THE EXPECTED VERSION NUMBER
OF THAT PROGRAM, THE ACTUAL OBSERVED VERSION NUMBER AT THE 
TIME OF THE RUNNING OF THE VERIFICATION PROCEDURE, AND A COMMENT.

THE COMMENTS AND THEIR INTERPRETATION IS AS FOLLOWS:

CHECK OK		THE EXPECTED PROGRAM EXISTS ON THE CURRENT
			SYSTEM AND THE VERSION NUMBER IS AS EXPECTED
			(CERTAIN PROGRAMS HAVE A BLANK VERSION NUMBER;
			THUS AN EXPECTED BLANK COMPARED TO AN ACTUAL
			BLANK WILL BE FLAGGED "CHECK OK").

VER. NO. MISMATCH	THE EXPECTED PROGRAM EXISTS BUT ITS VERSION
			NUMBER WAS NOT THE ONE WHICH WAS EXPECTED.

PROGRAM MISSING		THE EXPECTED PROGRAM WAS NOT FOUND IN THE 
			CURRENT SYSTEM.

UNEXPECTED FILE		THIS FILE WAS FOUND IN THE CURRENT SYSTEM
			BUT DID NOT APPEAR IN THE CONTRL FILE.



THIS MESSAGE ENDS WITH FOLLOWING LINE:

 ++++	END OF SEARCH.FOR MESSAGE		++++

E.	A SAMPLE LISTING OF A COMPLETE COPY OF ERRORS.LOG APPEARS IN 
APPENDIX D.

F.	THE OPERATING INSTRUCTIONS , AS WELL AS THE BATCH COMMANDS, 
ARE SET UP TO SUPPRESS THE AUTOMATIC PRINTING OF THE LOG FILES.  THESE
MAY BE PRINTED BY THE OPERATOR BY USING THE PRINT COMMAND
IF IT SHOULD APPEAR DESIREABLE TO INSPECT THEM.




III.	OPERATING INSTRUCTIONS.

THESE INSTRUCTIONS ASSUME THAT HARDWARE AND SOFTWARE 
INSTALLATION HAVE BEEN APPARENTLY SUCCESFULLY COMPLETED,
AND THAT THE VERIFICATION PACKAGE ITSELF HAS BEEN RESTORED
FROM MAGTAPE INTO A USER DIRECTORY WHICH HAS NO OTHER
FILES, AND WHICH HAS WHEEL PRIVILEGES.

	A.	LOGIN AS THE USER.


	B.	EXECUTE THE FOLLOWING COMMAND:

		DELETE *.LOG,*.YES


	C.	FOR EACH UNBUNDLED SOFTWARE PRODUCT TO BE VERIFIED
		EXECUTE A COMMAND OF THE FORM:

		COPY NAME.TXT (TO) NAME.YES

		WHERE NAME IS ONE OF:  COBOL, FORTRA, SORT, OR BASIC.

	FOR EXAMPLE:


		COPY COBOL.TXT (TO) COBOL.YES

		COPY FORTRA.TXT (TO) FORTRA.YES

		COPY SORT.TXT (TO) SORT.YES

		COPY BASIC.TXT (TO) BASIC.YES



	D.	EXECUTE THE FOLLOWING COMMAND:

		SUBMIT VERIFY.BAT/OUTPUT:NOLOG



	E.	INSPECT THE OUTPUT FILE ERRORS.LOG WHEN
		IT APPEARS ON THE PRINTER.  ANY
		ERROR MESSAGES APPEARING IN THE FILE MUST
		BE DIAGNOSED BY INSPECTING THE APPROPRIATE
		LOG FILES, AND MUST BE EITHER CORRECTED
		OR SATISFACTORILY EXPLAINED.

		OTHERS FILES TO BE INSPECTED MAY BE DONE SO
		BY MEANS OF AN EDITOR AT A TERMINAL, IF IT IS
		NOT DESIREABLE TO PRINT THE INDICATED FILES.
		THE FILES TO BE INSPECTED, AND THE APPLICABLE 
		SECTION OF THIS DOCUMENT FOLLOW:

		VERIFY.LOG		IV.2.

		VERIFY.LOG		IV.6.





IV.	SPECIAL COMMENTS.


1.	FILES PRODUCED BY VERIFY.BAT.


	A.	FILES WHICH AUTOMATICALLY GET PRINTED.
.LITERAL

	ERRORS.LOG	ALREADY DESCRIBED ABOVE
	VERIFY.LST	OUTPUT OF CREF TEST (INPUT IS VERIFY.CRF)
	VERFOR.LST	CREF OUTPUT OF FORTRAN TEST (OPTIONAL)
	VERCBL.LST	OUTPUT FROM COBOL COMPILATION WITH CREF OPTION
			 (OPTIONAL)


	B.	OTHER FILES PRODUCED BY VERIFY.BAT

	VERIFY.LOG	LOG OUTPUT OF BUNDLED SOFTWARE TEST
	VERFOR.LOG	LOG FILE FROM FORTRAN TEST (OPTIONAL)
	VERCBL.LOG	LOG FILE FROM COBOL TEST (OPTIONAL)
	VERSOR.LOG	LOG FILE FROM SORT TEST (OPTIONAL)
	VERBAS.LOG	LOG FILE FROM BASIC TEST (OPTIONAL)
	VERIF1.LOG	LOG FROM CLEANUP JOB
	VERIFY.REL	OUTPUT OF THE ASSEMBLY OF VERIFY.MAC
	VERIFY.CRF	OUTPUT OF ASSEMBLY OF VERIFY.MAC
	EDIT.EDI	CREATED DURING THE EDIT TEST
	FILCOM.TST	SHORT TEXT FILE FOR FILCOM TEST
	FILCO1.TST	COPY OF FILCOM.TST FOR FILCOM TEST
	RUNOFF.TST	SHORT TEXT FILE FOR RUNOFF TEST
	RUNOFF.MEM	OUTPUT OF RUNOFF TEST
	VERIFY.LIB	OUTPUT OF MAKLIB TEST
	VERDAT.OUT	OUTPUT OF SORT TEST (OPTIONAL)
	VERFOR.REL	OUTPUT OF FORTRAN COMPILATION (OPTIONAL)
	VERFOR.CRF	OUTPUT OF FORTRAN COMPILATION (OPTIONAL)
	VERCBL.REL	OUTPUT OF COBOL COMPILATION
	VERSOR.OUT	OUTPUT OF SORT TEST (OPTIONAL)

.END LITERAL	
2.	CHECKPOINT.BIN AND DUMP.EXE CAN ONLY BE ACCESSED 
	BY A USER HAVING WHEEL
	PRIVILEGES ENABLED.  THUS AN "ENABLE" COMMAND IS USED IN 
	THESE TESTS.  "DISABLE" OCCURS IMMEDIATLY AT THE END OF 
	EACH OF THE TESTS.

	TESTING OF MACRO, LINK, DDT, CREF, AND MAKLIB ARE DONE
	IN AN INTERCONNECTED MANNER.  A MACRO SOURCE FILE IS
	ASSEMBLED, LINKED AND LOADED.  DDT IS BROUGHT IN AND
	AFTER ACCESSING THE APPROPROIATE SYMBOL TABLE ONE
	SYMBOL IS DISPLAYED BY THE USING THE "=" COMMAND.  THE RESULT
	AND THE CORRECT ANSWER ARE DISPLAYED IN THE BATCH LOG
	FILE IN THE DDT TEST.  THEY SHOULD BE MANUALLY CHECKED.

	THE PROGRAM JUST LOADED IS THEN RUN.  IT DOES A RESET AND
	A HALTF.

	THE CREF TEST CAUSES A LISTING OF THE PROGRAM TO BE QUEUED
	TO THE PRINTER.

3.	THE EDIT TEST CAUSES THE FILE 
	EDIT.EDI TO BE CREATED.

4.	THE MAIL TEST CAUSES A MESSAGE TO BE SENT TO THE USER UNDER
	WHOSE NAME THE JOB WAS SUBMITTED.  THE MESSAGE

		[YOU HAVE A MESSAGE]

	WILL APPEAR ON THE USER'S TTY: SOMETIME DURING THE 
	EXECUTION OF THE BATCH STREAM.  THIS MESSAGE SHOULD BE IGNORED
	SINCE THE BATCH JOB IMMEDIATLY ATTEMPTS TO READ THIS SAME 
	TEST MESSAGE.

5.	THE FILCOM TEST COPIES A SIMPLE FILE AND THEN COMPARES THE 
	COPIED FILE TO THE ORIGINAL.  SINCE DISCREPANCIES WILL NOT
	CAUSE AN ERROR CONDITION DETECTABLE BY BATCH,  A SPECIAL
	MESSAGE ALREADY DESCRIBED WILL APPEAR IN ERRORS.LOG TO
	SHOW POSSIBLE DISCREPANCIES (THERE SHOULD BE NONE).  IN
	ADDITION, THE LOG FILE VERIFY.LOG MAY BE EXAMINED.  IF NO DISCREPANCIES
	HAVE BEEN FOUND, FILCOM'S MESSAGE WILL APPEAR:

		NO DIFFERENCES ENCOUNTERED

6.	THE RUNOFF TEST TAKES A TEXT FILE CONTAINING ONE WORD
	PER LINE AND JUSTIFIES ALL THE TEXT ONTO A SINGLE LINE.  
	BOTH THE INPUT AND OUTPUT FILES ARE DISPLAYED
	IN THE LOG FILE VERIFY.LOG.  THEY SHOULD BE MANUALLY
	EXAMINED.


V.	PACKAGING OF THE VERIFICATION PACKAGE.

FROM ONE RELEASE TO THE NEXT, VARIOUS CHANGES WILL HAVE TO BE
MADE TO THE VERIFICATION PACKAGE TO REFLECT CHANGES IN THE
DELIVERED SOFTWARE.  IT IS NOT POSSIBLE TO ANTICIPATE ALL SUCH 
CHANGES, SINCE NO ONE CAN SEE INTO THE FUTURE, BUT CERTAIN
CHANGES ARE ALMOST CERTAIN, AND THESE ARE DESCRIBED IN THIS
SECTION.

1.	CONTENTS OF THE BATCH CONTROL FILES.

	THE ACTUAL FILES WHICH GET VERIFIED MAY VARY FROM ONE RELEASE
	TO THE NEXT.  THE LIST OF THESE FILES IS GIVEN AT THE START
	OF THE BATCH CONTROL FILE VERIFY.BAT, AND ALSO IN THIS 
	DOCUMENT, APPENDIX C.

	IT IS VERY IMPORTANT THAT BOTH LISTS ALWAYS CONTAIN EXACTLY
	THE NAMES OF THE FILES WHICH ARE ACTUALLY TO BE VERIFIED, AND
	NO OTHER NAMES.  IF THE LISTS ARE SO MAINTAINED, IT IS POSSIBLE
	TO CHECK THE SOFTWARE SUBMISSION LISTS AGAINST THE VERIFICATION
	PACKAGE LISTS AND THEN ADD OR CHANGE THE VERIFICATION PROCEDURE
	PACKAGE ACCORDINGLY.  NARURALLY THE LISTS MUST BE UPDATED AT
	THE SAME TIME SO THAT THEY REMAIN USEFUL FOR THE NEXT ROUND
	OF CHANGES.

	2.  THE VERSION NUMBERS MUST BE UPDATED IN THE FILE CONTRL.TXT.
	IT IS RECOMMENDED THAT THIS BE DONE MANUALLY, BY MEANS OF A
	A TEXT EDITOR, USING THE SOFTWARE SUBMISSION DOCUMENTS AS A
	BASIS FOR THE DATA.  THIS PROVIDES A GOOD LEVEL OF
	CONTROL OVER THE ACCURACY OF THE INFORMATION.

	THE FILE CONTRL.TXT SHOULD CONTAIN ONE LINE OF DATA FOR
	EACH PRODUCT WHOSE VERSION NUMBER IS TO BE CHECKED.  ONLY
	VERSION NUMBERS OF BUNDLED SOFTWARE (THAT IS, ONLY 
	SOFTWARE WHICH
	IS TESTED FOR IN THE BATCH FILE VERIFY.BAT) GET CHECKED BY
	THE VERIFICATION PACKAGE.  

	THE SEQUENTIAL ARRANGEMENT OF FILE NAMES IS NOT CRITICAL.

	THE FORMAT OF EACH LINE IS IDENTICAL TO THE 
	SECOND LINE OF OUTPUT OF THE EXEC
	IN RESPONSE TO THE COMMAND:  

		@INFORMATION (ABOUT) VERSION

	EXCEPT THAT THE WORDS "PROGRAM IS " ARE NOT PRESENT.

	THIS OUTPUT TAKES ONE OF TWO FORMS:  IF THE FILE  
	HAS A VERSION NUMBER, AS IT SHOULD FOR ALL PROGRAMS
	WRITTEN IN ASSEMBLY LANGUAGE, THE FORMAT CONSISTS OF:

	<FILENAME><COMMA><SPACE><VERSION IS ><VERSION NUMBER><CR/LF>

	EXAMPLE:

	FILCOM, VERSION IS 20A(17)

	IF THE PROGRAM HAS NO VERSION NUMBER, AS MAY BE THE CASE 
	FOR PROGRAMS WRITTEN IN A HIGHER LEVEL LANGUAGE (FOR 
	EXAMPLE, ACCT20, WHICH IS WRITTEN IN FORTRAN), THE FORMAT
	IS:

	<FILENAME><CR/LF>

	THE FILENAME AND THE VERSION NUMBER MAY EACH BE UP TO 15 
	CHARACTERS LONG.

	EXAMPLE OF A SHORT VERSION OF CONTRL.TXT:

.LITERAL
		DUMP
		SETSPD, VERSION IS 2(3)
		MACRO, VERSION IS 51(414)
		LINK, VERSION IS 3(447)
		EDIT, VERSION IS 1A(25)
		CHKPNT, VERSION IS 1(100)
		DLUSER, VERSION IS 1(1)
		OPLEAS, VERSION IS 1(1)
		MAILER, VERSION IS 1(1)
		QUENCH, VERSION IS 1(5)
		OVRLAY
		DUMPER, VERSION IS 1A(103)
.END LITERAL

	THE FILE CONTRL.TXT MUST BE PRESENT IN THE SAME DIRECTORY
	AS ALL THE OTHER FILES IN THE VERIFICATION PACKAGE.


APPENDIX A.	ALPHABETIC LISTING OF FILES COMPRISING
		THE TOPS-20 VERIFICATION PROCEDURE.


.LITERAL

 BASIC.TXT	DATA FILE, COPIED TO BASIC.YES TO INITIATE
		 BASIC VERIFICATION TEST

 COBOL.TXT	DATA FILE, COPIED TO COBOL.YES TO INITIATE
		 COBOL VERIFICATION TEST

 FORTRA.TXT	DATA FILE, COPIED TO FORTRA.YES TO INITIATE
		 FORTRAN VERIFICATION TEST

 SORT.TXT	DATA FILE, COPIED TO SORT.YES TO INITIATE
		 SORT VERIFICATION TEST

 VERBAS.BAS	BASIC SOURCE FILE

 VERBAS.BAT	BASIC VERIFICATION TEST -- BATCH CONTROL FILE

 VERCBL.BAT	COBOL VERIFICATION TEST -- BATCH CONTROL FILE

 VERCBL.CBL	COBOL SOURCE FILE

 VERDAT.INP	SORT INPUT DATA FILE

 VERFOR.BAT	FORTRAN VERIFICATION TEST -- BATCH CONTROL FILE

 VERFOR.FOR	FORTRAN SOURCE PROGRAM

 VERIF1.BAT	VERIFICATION PACKAGE CLEAN-UP BATCH CONTROL FILE

 VERIFY.BAT	BUNDLED SOFTWARE VERIFICATION TEST -- BATCH CONTROL FILE

 VERIFY.DOC	VERIFICATION PACKAGE DOCUMENTATION

 VERIFY.MAC	MACRO SOURCE FILE

 VERSOR.BAT	SORT VERIFICATION TEST -- BATCH CONTROL FILE

 WRTERR.CRF	ERRORS.LOG INITIALIZATION ROUTINE -- CREF LISTING

 WRTERR.EXE	ERRORS.LOG INITIALIZATION ROUTINE -- EXECUTABLE FILE
		 (CONTAINS ITS OWN FOROTS)

 WRTERR.FOR	ERRORS.LOG INITIALIZATION ROUTINE -- SOURCE FILE

.END LITERAL



APPENDIX B.	SAMPLE BATCH COMMANDS FOR VERIFICATION OF 
		A SOFTWARE MODULE.

WHAT FOLLOWS SHOWS THE APPROXIMATE BATCH CONTROL COMMANDS
USED FOR A COMPLETE TEST OF A SOFTWARE MODULE.  NOT ALL
ARE APPROPRIATE FOR ALL MODULES.  THIS IS AN EXAMPLE ONLY.

.LITERAL
!
!MODULE.XXX TEST
!
!FIRST TEST FOR EXISTENCE OF FILE.
!
@COPY MODULE.XXX (TO) NUL:
@IF (NOERROR) @GOTO MODUL1::
@APPEND TTY: (TO) ERRORS.LOG
@
@++++	CONTROL FILE VERIFY.BAT ERROR		++++
@++++	COULD NOT FIND FILE MODULE.XXX		++++
@++++	END OF ERROR MESSAGE VERIFY.BAT		++++
@
@
!
MODUL1::
!
@INFORMATION (ABOUT) VERSION
!NEXT, DO A RUDIMENTARY TEST OF FUNCTIONING OF SOFTWARE PRODUCT
!
!
@RESET
@MODULE.XXX
*[SAMPLE COMMANDS APPEAR HERE]
@IF (NOERROR) @GOTO MODUL2::
@APPEND TTY: (TO) ERRORS.LOG
@
@++++	CONTROL FILE VERIFY.BAT ERROR		++++
@++++	COULD NOT GIVE COMMAND(S) TO MODULE.XXX	++++
@++++	END OF ERROR MESSAGE VERIFY.BAT		++++
@
@
!
MODUL2::
!
!
!CHECK FOR EXISTENCE OF A HELP FILE
@COPY SYS:MODULE.HLP (TO) NUL:
@IF (NOERROR) @GOTO MODUL4::
@APPEND TTY: (TO) ERRORS.LOG
@
@++++	CONTROL FILE VERIFY.BAT ERROR		++++
@++++	HELP FILE MISSING FOR MODULE.XXX	++++
@++++	END OF ERROR MESSAGE VERIFY.BAT		++++
@
@
!
MODUL4::
!
.END LITERAL



APPENDIX C.	LIST OF SOFTWARE MODULES WHICH ARE VERIFIED.

1.	BUNDLED SOFTWARE.

.LITERAL

	<SYSTEM>MONITR.EXE
	<SYSTEM>MONBCH.EXE
	<SYSTEM>MONMED.EXE
	<SYSTEM>MONMIN.EXE
	<SYSTEM>MONSML.EXE
	<SYSTEM>EXEC.EXE
	<SYSTEM>DUMP.EXE
	<SYSTEM>CHECKPOINT.BIN
	<SYSTEM>ERRMES.BIN
	<SYSTEM>SETSPD.EXE
	<SYSTEM>PTYCON.ATO
	<SYSTEM>SYSJOB.RUN
	<SYSTEM>CHECKD.EXE
	MACRO
	LINK
	DDT
	EXECUTION OF SIMPLE MACRO PROGRAM VERIFY.MAC
	MACSYM.UNV
	MONSYM.UNV
	EDIT
	CREF
	HELP
	PLEASE
	MAIL
	RDMAIL
	FILCOM
	CHECKD
	CHKPNT
	DLUSER
	OPLEAS
	MAILER
	QUENCH
	OVRLAY
	DUMPER
	PTYCON
	<SYSTEM>SYSJOB
	INFO
	WATCH
	SYSERR
	ULIST
	TRANSL
	ACCT20
	ACCTPR
	PA1050
	RUNOFF
	MAKLIB
	MAKRAM
	MAKVFU
.END LITERAL

2.	FORTRAN.
.LITERAL

	FORTRA.EXE
	FORTRA.HLP
	FOROTS.EXE
	FORDDT.REL
	FORDDT.HLP
.END LITERAL


3.	COBOL.
.LITERAL
	COBOL.EXE
	COBOL.HLP
	LIBOL.REL
	COBDDT.REL
	COBDDT.HLP
	ISAM.EXE
	ISAM.HLP
	LIBARY.EXE
	LIBARY.HLP
	LIBO10.EXE
	RERUN.EXE
	RERUN.HLP
	SELOTS.EXE
.END LITERAL

4.	SORT.
.LITERAL
	SORT.EXE
	SORT.HLP
.END LITERAL

5.	BASIC.
.LITERAL

	BASIC.EXE
	BASIC.HLP
.END LITERAL

	
APPENDIX D.	SAMPLE LISTING OF ERRORS.LOG.

.LITERAL

 ERRORS.LOG 31-Mar-76  11:05 52.5


++++	CONTROL FILE VERIFY.BAT			++++
++++	(THIS MESSAGE WILL ALWAYS		++++
++++	APPEAR IN ERRORS.LOG)			++++
++++	TEST OF FILCOM.  ANY DISCREPANCIES	++++
++++	BETWEEN TWO SUPPOSEDLY EQUAL FILES	++++
++++	WILL BE SANDWICHED BETWEEN TWO LINES	++++
++++	BELOW:					++++
++++	THIS LINE PRECEEDS ANY DISCREPANCIES	++++
++++	THIS LINE FOLLOWS ANY DISCREPANCIES	++++
++++	END OF FILCOM TEST IN VERIFY.BAT	++++


++++	CONTROL FILE VERIFY.BAT END MESSAGE	++++
++++	CONTROL HAS REACHED %FIN		++++
++++	(THIS MESSAGE WILL ALWAYS		++++
++++	APPEAR IN ERRORS.LOG)			++++
++++	END OF VERIFY.BAT END MESSAGE		++++


++++	CONTROL FILE VERBAS.BAT ERROR		++++
++++	HELP FILE MISSING FOR SYS:BASIC.EXE	++++
++++	END OF ERROR MESSAGE VERBAS.BAT		++++
 
 ++++	SEARCH.FOR MESSAGE			++++
 ++++	COMPARISON OF VERSION NUMBERS		++++
 ++++						++++
 PROGRAM NAME    SHOULD BE       VERSION IS
 
 MONITR          1(356)          1(356)          CHECK OK            
 MONBCH          1(354)          1(354)          CHECK OK            
 MONMED          1(354)          1(354)          CHECK OK            
 MONMINMONMIN    1(354)          1(354)          CHECK OK            
 MONSML          1(354)          1(354)          CHECK OK            
 EXECEXECEXECEXE 1A(106)         1A(106)         CHECK OK            
 DUMP                                            CHECK OK            
 MACRO           51(414)         51(414)         CHECK OK            
 LINK            3(447)          3(447)          CHECK OK            
 EDIT            1A(26)          1A(25)          VER. NO. MISMATCH   
 CREF            52(21)          52(21)          CHECK OK            
 HELP            4(54)           4(54)           CHECK OK            
 PLEASE          567AB(654342)-1 5678AB(112233)- VER. NO. MISMATCH   
 MAIL            1(1)            1(1)            CHECK OK            
 RDMAIL          1               1               CHECK OK            
 FILCOM          20A(17)         20A(17)         CHECK OK            
 CHECKD          1(1)            1(1)            CHECK OK            
 CHKPNT          1(100)          1(100)          CHECK OK            
 DLUSER          1(1)            1(1)            CHECK OK            
 OPLEAS          1(1)            1(1)            CHECK OK            
 MAILER          1(1)            1(1)            CHECK OK            
 QUENCH          1(5)            1(5)            CHECK OK            
 OVRLAY                                          CHECK OK            
 DUMPER                          1A(103)         VER. NO. MISMATCH   
 PTYCON VERSION I                                CHECK OK            
 SURPRIZE        7(0)                            PROGRAM MISSING     
 SRPRIZ          5(5)-2                          PROGRAM MISSING     
 SYSJOB                                          CHECK OK            
 INFO            1(1)            1(1)            CHECK OK            
 WATCH                                           CHECK OK            
 SYSERR          5(231)          5(231)          CHECK OK            
 ULIST                                           CHECK OK            
 SETSPD          2(3)            2(3)            CHECK OK            
 TRANSL          1(5)            1(5)            CHECK OK            
 ACCT20                                          CHECK OK            
 ACCTPR          1(25)           1(25)           CHECK OK            
 PA1050          (262)           (262)           CHECK OK            
 RUNOFF          11(247)         11(247)         CHECK OK            
 MAKLIB          1(6)            1(6)            CHECK OK            
 UNEXPECTED3                                     UNEXPECTED FILE     
 UNEXPECTED1                                     UNEXPECTED FILE     
 UNEXPECTED2                                     UNEXPECTED FILE     
 ++++	END OF SEARCH.FOR MESSAGE		++++
.END LITERAL

